package controller;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.net.URL;

import controller.GameManager.GameStates;

public class ChooseState extends State {
	
	
	private Image level1;
	private Image level2;
	private Image level3;
	
	public ChooseState(){
		super();
		//loads pictures of the levels
		arenaName = "level1";
		URL url = getClass().getClassLoader().getResource("assets/level1.png");
		level1 = Toolkit.getDefaultToolkit().getImage(url);
	    url = getClass().getClassLoader().getResource("assets/level2.png");
		level2 = Toolkit.getDefaultToolkit().getImage(url);
	    url = getClass().getClassLoader().getResource("assets/level3.png");
		level3 = Toolkit.getDefaultToolkit().getImage(url);
	}

	@Override
	public void init() {

		
	}
	
	@Override
	public String getNewArenaName(){
		return arenaName;
	}
   
	@Override
	public void load() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void update() {
		// TODO Auto-generated method stub
		
	}
	private void changeState(){
		changeState = true;
		nextState = GameStates.LEVEL;
	}

	@Override
	public void updatePlayerDisplay(KeyEvent ke) {
		//Chooses an arena and changes to levelSate
		if(ke.getKeyCode() == KeyEvent.VK_A){
			arenaName = "level1";
			changeState();
		}
		if(ke.getKeyCode() == KeyEvent.VK_B){
			arenaName = "level2";
			changeState();
		}
		if(ke.getKeyCode() == KeyEvent.VK_C){
			arenaName = "level3";
			changeState();
		}
		System.out.println(changeState);
	}

	@Override
	public void listenForKeyReleased(KeyEvent ke) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void draw(Graphics graphics) {
		graphics.setColor(Color.BLACK);
		graphics.fillRect(0, 0, 1000, 700);
		graphics.setColor(Color.WHITE);
		graphics.setFont(new Font("TimesRoman", Font.BOLD, 40));
		graphics.drawString("Choose arena", 50, 50);
		graphics.drawImage(level1, 72, 100, 150, 100, null);
	
	}

	@Override
	public void resetState() {
		changeState = false;
		
	}

}
